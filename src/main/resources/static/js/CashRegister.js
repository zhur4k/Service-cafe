// const csrfToken = document.querySelector('meta[name="_csrf"]').content;
// const csrfHeader = document.querySelector('meta[name="_csrf_header"]').content;
//All category to page
let categoryData = [];
//All items from server
let itemsToPage = [];
//Items in order on page
let orderItems = [];
//Shift state
let shift=[]
let numberOfTable = 0;
let cashPaid=0;
let cashLessPaid=0;
let establishmentPaid=0;
let sumOfChange=0;
let total=0;
getCategoriesToPage();
getItemsToPage();

//Display main container
function displayMainContainer() {
    let headButtons = document.getElementById('buttons-head');
    headButtons.innerHTML = '';
    let settingsButton = document.createElement('button');
    settingsButton.classList.add('button-in-header');
    settingsButton.textContent = '‚ò∏';
    settingsButton.onclick = function() {
        displaySettings();
    }
    headButtons.appendChild(settingsButton);
    // –ü–æ–ª—É—á–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
    let mainContainer = document.getElementById('main-container');

    // –û—á–∏—â–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –ø–µ—Ä–µ–¥ –æ—Ç—Ä–∏—Å–æ–≤–∫–æ–π
    mainContainer.innerHTML = '';

    // –°–æ–∑–¥–∞–µ–º –ª–µ–≤—É—é —á–∞—Å—Ç—å (leftContainer)
    let leftContainer = document.createElement('div');
    leftContainer.classList.add('left');
    leftContainer.id = 'leftContainer';

    // –°–æ–∑–¥–∞–µ–º –ø—Ä–∞–≤—É—é —á–∞—Å—Ç—å (rightContainer)
    let rightContainer = document.createElement('div');
    rightContainer.classList.add('right');

    let orderList = document.createElement('div');
    orderList.classList.add('order-list');

    let table = document.createElement('table');
    let tbody = document.createElement('tbody');
    tbody.id = 'order-items';
    table.appendChild(tbody);

    orderList.appendChild(table);

    let total = document.createElement('h2');
    total.id = 'total';
    total.textContent = '0.00 —Ä';

    let payButton = document.createElement('button');
    payButton.type = 'button';
    payButton.className = 'button';
    payButton.textContent = '–û–ø–ª–∞—Ç–∏—Ç—å';
    payButton.onclick = function() {
        checkOrderAndDisplayPayBlock();
    };

    rightContainer.appendChild(orderList);
    rightContainer.appendChild(total);
    rightContainer.appendChild(payButton);

    // –î–æ–±–∞–≤–ª—è–µ–º –ª–µ–≤—É—é –∏ –ø—Ä–∞–≤—É—é —á–∞—Å—Ç–∏ –≤ –æ—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
    mainContainer.appendChild(leftContainer);
    mainContainer.appendChild(rightContainer);

    //Display categories to page
    displayMainCategories();

    displayOrder();
}

function setTableNumber(number){
    numberOfTable = parseInt(number);
}
function showListOfUser(rightContainerChild2) {
    let xhr = new XMLHttpRequest();
    xhr.open('GET', '/getListOfUsers', true);
    // xhr.setRequestHeader(csrfHeader, csrfToken);

    xhr.onreadystatechange = function() {
        if (xhr.readyState === 4) {
            if (xhr.status === 200) {
                showMessage('–£—Å–ø–µ—à–Ω–æ!!!', 'green');
                if (xhr.responseText) {
                    let listOfUser = document.createElement('div');
                    listOfUser.style.fontSize = '40px';
                    listOfUser.style.color = 'white';
                    listOfUser.innerHTML = xhr.responseText;
                    rightContainerChild2.appendChild(listOfUser);
                }
            } else {
                showMessage(xhr.responseText);
            }
        }
    };
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å
    xhr.send();
}

function showUserAdd() {
    let mainContainer = document.getElementById('main-container');
    let rightContainer = document.getElementById('right-container');

// –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —ç–ª–µ–º–µ–Ω—Ç rightContainer
    if (rightContainer) {
        // –ï—Å–ª–∏ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, —É–¥–∞–ª—è–µ–º –µ–≥–æ
        rightContainer.remove();
        return
    }

    let loginInput = document.createElement('input');
    loginInput.id='login';
    loginInput.classList.add('button-in-settings');

    rightContainer = document.createElement('div');
    rightContainer.id='right-container';
    rightContainer.classList.add('right-settings');
    let rightContainerChild = document.createElement('div');
    rightContainerChild.classList.add('right-settings-button-container');
    let rightContainerChild2 = document.createElement('div');


    let addCashButton = document.createElement('button');
    addCashButton.type = 'button';
    addCashButton.className = 'button-in-settings';
    addCashButton.textContent = '–î–æ–±–∞–≤–∏—Ç—å';
    addCashButton.onclick = function() {
        addUserToShift();
    };

    rightContainerChild2.appendChild(loginInput);

    rightContainerChild.appendChild(addCashButton);
    showListOfUser(rightContainerChild2);
    rightContainer.appendChild(rightContainerChild2);
    rightContainer.appendChild(rightContainerChild);
    mainContainer.appendChild(rightContainer);
}

//Display settings page
function displaySettings() {
    let headButtons = document.getElementById('buttons-head');
    headButtons.innerHTML = '';
    let backButton = document.createElement('button');
    backButton.classList.add('button-in-header');
    backButton.textContent = 'üîô';
    backButton.onclick = function() {
        displayMainContainer();
    }
    headButtons.appendChild(backButton);


    let mainContainer = document.getElementById('main-container');

    // –û—á–∏—â–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –ø–µ—Ä–µ–¥ –æ—Ç—Ä–∏—Å–æ–≤–∫–æ–π
    mainContainer.innerHTML = '';

    // –°–æ–∑–¥–∞–µ–º –ª–µ–≤—É—é —á–∞—Å—Ç—å (leftContainer)
    let leftContainer = document.createElement('div');
    leftContainer.classList.add('left-settings');

    let shiftButton = document.createElement('button');
    shiftButton.id = "shiftButton";
    shiftButton.type = 'button';
    shiftButton.className = 'button-in-settings';
    checkShiftButtonState();

    let xButton = document.createElement('button');
    xButton.type = 'button';
    xButton.className = 'button-in-settings';
    xButton.textContent = 'X-–û—Ç—á—ë—Ç';
    xButton.onclick = function() {
        xButton.disabled = true;
        xReportSend(xButton);
    };
    let collectionButton = document.createElement('button');
    collectionButton.type = 'button';
    collectionButton.className = 'button-in-settings';
    collectionButton.textContent = '–ò–Ω–∫–∞—Å—Å–∞—Ü–∏—è';
    collectionButton.onclick = function() {
        showCollection();
    };
    let addUserButton = document.createElement('button');
    addUserButton.type = 'button';
    addUserButton.className = 'button-in-settings';
    addUserButton.textContent = '–î–æ–±–∞–≤–∏—Ç—å —Ä–∞–±–æ—Ç–Ω–∏–∫–∞';
    addUserButton.onclick = function() {
        showUserAdd();
    };
    leftContainer.appendChild(shiftButton);
    leftContainer.appendChild(xButton);
    leftContainer.appendChild(collectionButton);
    leftContainer.appendChild(addUserButton);

    mainContainer.appendChild(leftContainer);

}

function displayPayBlock(){
    let headButtons = document.getElementById('buttons-head');
    headButtons.innerHTML = '';
    let backButton = document.createElement('buttonBack');
    backButton.classList.add('button-in-header');
    backButton.textContent = 'üîô';
    backButton.onclick = function() {
        displayMainContainer();
    }
    headButtons.appendChild(backButton);


    let mainContainer = document.getElementById('main-container');

    // –û—á–∏—â–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –ø–µ—Ä–µ–¥ –æ—Ç—Ä–∏—Å–æ–≤–∫–æ–π
    mainContainer.innerHTML = '';

    let rightContainer = document.createElement('div');
    rightContainer.classList.add('right-pay');

    mainContainer.appendChild(getInputForm());


    setSumAfterPaidOperation();
    let cashContainer = document.createElement('div');
    cashContainer.classList.add('child-block-pay');
    cashContainer.textContent = '–ù–∞–ª–∏—á–Ω—ã–µ $';
    cashContainer.onclick = function () {
        cashPaid+= document.getElementById('sum-input').textContent*100;
        setSumAfterPaidOperation();
    }
    rightContainer.appendChild(cashContainer);

    let lessCashContainer = document.createElement('div');
    lessCashContainer.classList.add('child-block-pay');
    lessCashContainer.textContent = '–ë–µ–∑–Ω–∞–ª–∏—á–Ω—ã–π $'
    lessCashContainer.onclick = function () {
        cashLessPaid+= document.getElementById('sum-input').textContent*100;
        setSumAfterPaidOperation();
    }
    rightContainer.appendChild(lessCashContainer);

    let establishmentContainer = document.createElement('div');
    establishmentContainer.classList.add('child-block-pay');
    establishmentContainer.textContent = '–ó–∞ —Å—á—ë—Ç –∑–∞–≤–µ–¥–µ–Ω–∏—è';
    establishmentContainer.onclick = function () {
        establishmentPaid = total;
        cashPaid=0;
        cashLessPaid=0;
        sumOfChange=0;
        setSumAfterPaidOperation();
    }

    rightContainer.appendChild(establishmentContainer);

    mainContainer.appendChild(rightContainer);
}
function displayCheck() {
    let headButtons = document.getElementById('buttons-head');
    headButtons.innerHTML = '';
    let backButton = document.createElement('buttonBack');
    backButton.classList.add('button-in-header');
    backButton.textContent = 'üîô';
    backButton.onclick = function() {
        cashPaid = 0;
        cashLessPaid = 0;
        establishmentPaid=0;
        displayMainContainer();
    }
    headButtons.appendChild(backButton);

    let mainContainer = document.getElementById('main-container');
    // –û—á–∏—â–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –ø–µ—Ä–µ–¥ –æ—Ç—Ä–∏—Å–æ–≤–∫–æ–π
    mainContainer.innerHTML = '';

    let mainCheckBlock = document.createElement('div');
    mainCheckBlock.classList.add('main-check-block');
    let mainCheckBlockChild = document.createElement('div');
    mainCheckBlockChild.classList.add('main-check-block-child');

    let orderList = document.createElement('div');
    orderList.classList.add('order-list-check');

    let table = document.createElement('table');
    table.classList.add('table-check');
    let tbody = document.createElement('tbody');
    tbody.id = 'order-items';

    table.appendChild(tbody);
    orderList.appendChild(table);

    let totalH = document.createElement('div');
    totalH.classList.add('total');
    totalH.id = 'total';
    totalH.textContent  = '–ò—Ç–æ–≥: '+(total/100).toFixed(2)+ '—Ä';

    let sumOfChangeD = document.createElement('div');
    sumOfChangeD.classList.add('total');
    sumOfChangeD.textContent = '–°–¥–∞—á–∞: '+ (sumOfChange/100).toFixed(2)+' —Ä';

    let sumOfPaid = document.createElement('div');
    sumOfPaid.classList.add('total');
    sumOfPaid.textContent = '–ù–∞–ª–∏—á–Ω—ã–º–∏: '+(cashPaid/100).toFixed(2)+' —Ä  –ö–∞—Ä—Ç–æ–π: '+(cashLessPaid/100).toFixed(2)
    +' —Ä  –ó–∞ —Å—á—ë—Ç –∑–∞–≤–µ–¥–µ–Ω–∏—è: '+(establishmentPaid/100).toFixed(2)+' —Ä';

    let submitButton = document.createElement('button');
    submitButton.type = 'button';
    submitButton.className = 'button';
    submitButton.textContent = '–û–ø–ª–∞—Ç–∏—Ç—å';
    submitButton.onclick = function() {
        submitButton.disabled = true;
        submitOrder(submitButton);
    };

    let cancelButton = document.createElement('button');
    cancelButton.type = 'button';
    cancelButton.className = 'button';
    cancelButton.textContent = '–û—Ç–º–µ–Ω–∏—Ç—å';
    cancelButton.onclick = function() {
        clearOrder();
    };
    mainCheckBlockChild.appendChild(orderList);
    mainCheckBlockChild.appendChild(totalH);
    mainCheckBlock.appendChild(mainCheckBlockChild);
    mainCheckBlock.appendChild(sumOfChangeD);
    mainCheckBlock.appendChild(sumOfPaid);
    mainCheckBlock.appendChild(submitButton);
    mainCheckBlock.appendChild(cancelButton);
    mainContainer.appendChild(mainCheckBlock);

    const orderItemTable = document.getElementById("order-items");
    orderItemTable.innerHTML = "";

    orderItems.forEach((item) => {
        const row = document.createElement("tr");
        const itemCell = document.createElement("td");
        const quantityCell = document.createElement("td");
        const totalCell = document.createElement("td");

        itemCell.textContent = item.nameOfItems;
        quantityCell.textContent = item.quantity;
        totalCell.textContent = ((item.price * item.quantity) / 100).toFixed(2) + " —Ä";

        quantityCell.style.width = "20%";
        quantityCell.style.textAlign = "center"
        quantityCell.classList.add("order-table-td-check");

        itemCell.style.width = "60%";
        itemCell.classList.add("order-table-td-check");

        totalCell.style.width = "20%";
        totalCell.style.textAlign = "center"
        totalCell.classList.add("order-table-td-check");

        row.appendChild(quantityCell);
        row.appendChild(itemCell);
        row.appendChild(totalCell);

        orderItemTable.appendChild(row);

    });
}

function setSumAfterPaidOperation(){
    sumOfChange = (total-cashPaid-cashLessPaid-establishmentPaid).toFixed(2);
    if(sumOfChange<=0){
        sumOfChange = Math.abs(sumOfChange);
        return displayCheck();
    }
    document.getElementById('sum-input').textContent =(sumOfChange/100).toFixed(2);
    document.getElementById( 'sum-info').textContent = '–ö –æ–ø–ª–∞—Ç–µ: '+(sumOfChange/100).toFixed(2)
        +'—Ä—É–± –∏–∑ '+(sumOfChange/100).toFixed(2)+'—Ä—É–±';

}
//Show pay block
function checkOrderAndDisplayPayBlock() {
    let xhr = new XMLHttpRequest();
    xhr.open('GET', '/getOpenShift', true);
    // xhr.setRequestHeader(csrfHeader, csrfToken);

    xhr.onreadystatechange = function() {
        if (xhr.readyState === 4 && xhr.status === 200) {
            // –û–±—Ä–∞–±–æ—Ç–∫–∞ —É—Å–ø–µ—à–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞
            if(xhr.responseText)
                shift = JSON.parse(xhr.responseText);
            shift=xhr.responseText;
            // –ü–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Ç–≤–µ—Ç–∞, –ø—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ª–æ–≤–∏–µ
            if (shift) {
                if (orderItems.length<1){
                    return showMessage('–î–æ–±–∞–≤—å—Ç–µ —Ç–æ–≤–∞—Ä—ã –≤ –∑–∞–∫–∞–∑!!!');
                }
                displayPayBlock();
            } else {
                showMessage();
            }
        }
    };
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å
    xhr.send();
}

function showCollection() {
    let mainContainer = document.getElementById('main-container');
    let rightContainer = document.getElementById('right-container');

// –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —ç–ª–µ–º–µ–Ω—Ç rightContainer
    if (rightContainer) {
        // –ï—Å–ª–∏ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, —É–¥–∞–ª—è–µ–º –µ–≥–æ
        rightContainer.remove();
        return
    }
    rightContainer = document.createElement('div');
    rightContainer.id='right-container';
    rightContainer.classList.add('right-settings');
    let rightContainerChild = document.createElement('div');
    rightContainerChild.classList.add('right-settings-button-container');

    
    let addCashButton = document.createElement('button');
    addCashButton.type = 'button';
    addCashButton.className = 'button-in-settings';
    addCashButton.textContent = '–í–Ω–µ—Å—Ç–∏';
    addCashButton.onclick = function() {
        addCashButton.disabled = true;
        sendCollectionMove(addCashButton,true);
    };
    let takeCashButton = document.createElement('button');
    takeCashButton.type = 'button';
    takeCashButton.className = 'button-in-settings';
    takeCashButton.textContent = '–ò–∑—ä—è—Ç—å';
    takeCashButton.onclick = function() {
        takeCashButton.disabled = true;
        sendCollectionMove(takeCashButton,false);
    };

    let sumInCashRegister = document.createElement('div');
    sumInCashRegister.id = 'sum-in-cashRegister';
    sumInCashRegister.classList.add('sum-in-cash-register');
    getSumInCashRegister();
    rightContainer.appendChild(getInputForm());
    rightContainerChild.appendChild(addCashButton);
    rightContainerChild.appendChild(takeCashButton);
    rightContainerChild.appendChild(sumInCashRegister);
    rightContainer.appendChild(rightContainerChild);
    mainContainer.appendChild(rightContainer);
}
//Get sum in Cash Register
function getSumInCashRegister() {
// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–∫–∞–∑ –Ω–∞ —Å–µ—Ä–≤–µ—Ä
    let xhr = new XMLHttpRequest();
    xhr.open('GET', '/sumInCashRegister', true);
    xhr.setRequestHeader('Content-Type', 'application/json');
    // xhr.setRequestHeader(csrfHeader, csrfToken); // –ü–µ—Ä–µ–¥–∞—á–∞ CSRF-—Ç–æ–∫–µ–Ω–∞ –≤ –∑–∞–≥–æ–ª–æ–≤–∫–µ
    xhr.onreadystatechange = function() {
        if (xhr.readyState === 4 && xhr.status === 200) {
            document.getElementById('sum-in-cashRegister').textContent = '–í –∫–∞—Å—Å–µ: '+xhr.responseText+' —Ä—É–±';
        }
    };
    xhr.send();
}
//Send move of cash in cashRegister
function sendCollectionMove(button, collectionType) {
    let collection = ({
        typeOfOperation: collectionType,
        sumOfOperation: (parseFloat(document.getElementById('sum-input').innerText).toFixed(2)*100) // –ú–∞—Å—Å–∏–≤ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Ç–æ–≤–∞—Ä–∞—Ö –≤ –∑–∞–∫–∞–∑–µ
    });
    let xhr = new XMLHttpRequest();
    xhr.open('POST', '/collectionMove', true);
    xhr.setRequestHeader('Content-Type', 'application/json');
    // xhr.setRequestHeader(csrfHeader, csrfToken); // –ü–µ—Ä–µ–¥–∞—á–∞ CSRF-—Ç–æ–∫–µ–Ω–∞ –≤ –∑–∞–≥–æ–ª–æ–≤–∫–µ
    xhr.onreadystatechange = function() {
        if (xhr.readyState === 4 && xhr.status === 200){
            getSumInCashRegister();
            showMessage(xhr.responseText,'green');
        }else{
            showMessage(xhr.responseText);
        }
        setTimeout(function() {
            button.disabled = false;
        }, 1000);
    };
    xhr.send(JSON.stringify(collection));
}
function displayMainCategories() {
    let leftContainer = document.getElementById('leftContainer');
    leftContainer.innerHTML = "";
    categoryData.forEach(function (category){
        if(category.parentCategory==null){
            const categoryDiv = document.createElement('div');
            categoryDiv.classList.add('child-block');

            categoryDiv.textContent = category.categoriesName;
            categoryDiv.onclick = function() {
                displayLeftBlocks(category,category.childCategories);
            };
            leftContainer.appendChild(categoryDiv);
        }
    });
}

//Display order to page
function displayLeftBlocks(categories,childCategories) {
    let leftContainer = document.getElementById('leftContainer');
    leftContainer.innerHTML = "";

    let backDiv = document.createElement('div');
    backDiv.classList.add('child-block');
    backDiv.onclick = function() {
        displayMainCategories();
    }
    let backDivHeading = document.createElement('h2');
    backDivHeading.textContent = '–í–µ—Ä–Ω—É—Ç—å—Å—è';
    backDiv.appendChild(backDivHeading);
    backDiv.style.backgroundColor = "red";
    leftContainer.appendChild(backDiv);
    childCategories.forEach(function(item) {
        const categoryDiv = document.createElement('div');
        categoryDiv.classList.add('child-block');

        categoryDiv.textContent = item.categoriesName;
        categoryDiv.onclick = function() {
            displayLeftBlocks(item,item.childCategories);
        };
        leftContainer.appendChild(categoryDiv);
    });
    categories.items.forEach(function(item) {
        let productDiv = document.createElement('div');
        productDiv.classList.add('child-block');
        productDiv.onclick = function() {
            addProduct(item.id);
        };

        let productInfoDiv =
            document.createElement('div');
        productInfoDiv.classList.add('child-block-Info');

        let itemNameHeading = document.createElement('div');
        itemNameHeading.textContent = item.nameOfItems;

        let itemPriceParagraph = document.createElement('div');
        itemPriceParagraph.textContent = (item.price / 100).toFixed(2) + " —Ä—É–±";

        productInfoDiv.appendChild(itemNameHeading);
        productInfoDiv.appendChild(itemPriceParagraph);
        productDiv.appendChild(productInfoDiv);

        leftContainer.appendChild(productDiv);
    });
}

//Return sum input form
function getInputForm() {
    let inputForm = document.createElement('div')
    inputForm.classList.add('sum-input-container')
    let sumInputContainer = document.createElement('div');
    sumInputContainer.classList.add('sum-input-container-child')

    let sumInput = document.createElement('div');
    sumInput.classList.add('sum-input');
    sumInput.id = 'sum-input';

    let sumInfo = document.createElement('div');
    sumInfo.classList.add('sum-info');
    sumInfo.id = 'sum-info';

    let label = document.createElement('div');
    label.textContent = '—Ä—É–±';
    let buttonClear = document.createElement('button');
    buttonClear.classList.add('button-clear-form-input');
    buttonClear.textContent = '√ó';
    buttonClear.onclick = ClearInputFormSum;
    let buttonContainer = document.createElement('div');
    // buttonContainer.classList.add('sum-input-container');
    for (let i = 1; i <= 9; i++) {
        let button = createButtonToSumElement(i);
        buttonContainer.appendChild(button);
    }
    let dotButton = createButtonToSumElement('.');
    buttonContainer.appendChild(dotButton);
    let zeroButton = createButtonToSumElement('0');
    buttonContainer.appendChild(zeroButton);
    let deleteButton = createButtonToSumElement('‚å´');
    deleteButton.onclick = deleteLastChar;
    buttonContainer.appendChild(deleteButton);

    sumInputContainer.appendChild(sumInput);
    sumInputContainer.appendChild(label);
    sumInputContainer.appendChild(buttonClear);

    inputForm.appendChild(sumInputContainer);
    inputForm.appendChild(sumInfo);
    inputForm.appendChild(buttonContainer);
    return inputForm;
}

//Clear all char from input form sum element
function ClearInputFormSum() {
    let sumInput = document.getElementById('sum-input');
    sumInput.textContent ='';
}

//Delete last char from input form sum element
function deleteLastChar() {
    let sumInput = document.getElementById('sum-input');
    let currentText = sumInput.textContent;
    sumInput.textContent = currentText.slice(0, -1);
}

//Append Char to sum Input element
function appendToInput(value) {
    let inputElement = document.getElementById('sum-input');
    let currentValue = inputElement.textContent;

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —Ç–æ—á–∫–∏ –≤ —Ç–µ–∫—É—â–µ–º –≤–≤–æ–¥–µ
    let hasDot = currentValue.includes('.');
    if(hasDot&&value==='.') {
        return;
        // –ï—Å–ª–∏ —Ç–µ–∫—É—â–∏–π –≤–≤–æ–¥ –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç —Ç–æ—á–∫—É –∏–ª–∏ —Å–æ–¥–µ—Ä–∂–∏—Ç —Ç–æ—á–∫—É, –Ω–æ –ø–æ—Å–ª–µ –Ω–µ—ë –Ω–µ—Ç —á–∏—Å–ª–∞
    }else if (!hasDot || (hasDot && !/\d$/.test(currentValue))) {
        // –ï—Å–ª–∏ –≤–≤–µ–¥–µ–Ω–∞ —Ç–æ—á–∫–∞, –¥–æ–±–∞–≤–ª—è–µ–º 0 –ø–µ—Ä–µ–¥ –Ω–µ–π
        if (value === '.' && !/\d$/.test(currentValue)) {
            inputElement.textContent += '0.';
        }
        // –ï—Å–ª–∏ —Ç–µ–∫—É—â–∏–π –≤–≤–æ–¥ - –Ω–æ–ª—å –∏ –≤–≤–µ–¥–µ–Ω–æ —á–∏—Å–ª–æ, —Ç–æ –≤–≤–µ–¥–µ–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –±—É–¥–µ—Ç –Ω–æ–≤—ã–º –≤–≤–æ–¥–æ–º
        else if (currentValue === '0' && /\d/.test(value)) {
            inputElement.textContent = value;
        }
        // –î–æ–±–∞–≤–ª—è–µ–º –≤–≤–æ–¥ –∫ —Ç–µ–∫—É—â–µ–º—É –∑–Ω–∞—á–µ–Ω–∏—é
        else {
            inputElement.textContent += value;
        }
    }

    // –ï—Å–ª–∏ —Ç–µ–∫—É—â–∏–π –≤–≤–æ–¥ —Å–æ–¥–µ—Ä–∂–∏—Ç —Ç–æ—á–∫—É
    else if (hasDot) {
        // –†–∞–∑–±–∏–≤–∞–µ–º —á–∏—Å–ª–æ –Ω–∞ —Ü–µ–ª—É—é –∏ –¥–µ—Å—è—Ç–∏—á–Ω—É—é —á–∞—Å—Ç–∏
        let parts = currentValue.split('.');
        let integerPart = parts[0];
        let decimalPart = parts[1] || '';

        // –ï—Å–ª–∏ –≤ –¥–µ—Å—è—Ç–∏—á–Ω–æ–π —á–∞—Å—Ç–∏ —É–∂–µ –µ—Å—Ç—å –¥–≤–∞ –∑–Ω–∞–∫–∞ –ø–æ—Å–ª–µ —Ç–æ—á–∫–∏, –Ω–µ –¥–æ–±–∞–≤–ª—è–µ–º –±–æ–ª—å—à–µ
        if (decimalPart.length < 2) {
            // –î–æ–±–∞–≤–ª—è–µ–º –≤–≤–æ–¥ –∫ —Ç–µ–∫—É—â–µ–π –¥–µ—Å—è—Ç–∏—á–Ω–æ–π —á–∞—Å—Ç–∏
            inputElement.textContent += value;
        }
    }

    // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –≤–≤–æ–¥, —á—Ç–æ–±—ã —Ä–µ–∑—É–ª—å—Ç–∞—Ç –Ω–µ –ø—Ä–µ–≤—ã—à–∞–ª 10000
    if (parseFloat(inputElement.textContent) > 10000) {
        inputElement.textContent = '10000';
    }
}

//Create button to sum input form
function createButtonToSumElement(value) {
    let button = document.createElement('button');
    button.className = 'button-sum-input';
    button.textContent = value;
    button.onclick = function() {
        appendToInput(value);
    };
    return button;
}

//Add product to order
function addProduct(id) {
    // –ü–æ–∏—Å–∫ –ø—Ä–æ–¥—É–∫—Ç–∞ –≤ –º–∞—Å—Å–∏–≤–µ –ø–æ –∏–º–µ–Ω–∏
    const existingProduct = orderItems.find(orderItems => (orderItems.item === id));

    if (existingProduct) {
        // –ï—Å–ª–∏ –ø—Ä–æ–¥—É–∫—Ç —Å —Ç–∞–∫–∏–º –∏–º–µ–Ω–µ–º —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, —É–≤–µ–ª–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ
        existingProduct.quantity += 1;
    } else {
        let items = itemsToPage.find(items => (items.id === id));
        // –ò–Ω–∞—á–µ —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –ø—Ä–æ–¥—É–∫—Ç
        orderItems.push({
            quantity: 1,
            item: id,
            nameOfItems:items.nameOfItems,
            unitPrice: items.unitPrice,
            price: items.price,
            unit: items.unit.name,
        });
    }
    displayOrder();
}

//Display order to page
function displayOrder() {
    const orderItemTable = document.getElementById("order-items");
    orderItemTable.innerHTML = "";
    total = 0;

    orderItems.forEach((item, index) => {
        const row = document.createElement("tr");
        const itemCell = document.createElement("td");
        const quantityCell = document.createElement("td");
        const quantityCellInput = document.createElement("input");
        const totalCell = document.createElement("td");
        const removeCell = document.createElement("td");
        const removeButton = document.createElement("button");

        itemCell.textContent = item.nameOfItems;
        quantityCellInput.value = item.quantity;
        // quantityCellInput.value = (item.quantity*(item.unitPrice/1000)).toFixed(3);
        const itemTotal = ((item.price/100) * item.quantity).toFixed(2) + " —Ä";
        totalCell.textContent = itemTotal;
        removeButton.textContent = "–£–¥–∞–ª–∏—Ç—å";
        removeButton.classList.add("remove-button");
        removeButton.addEventListener("click", () => removeItem(index));

        quantityCell.style.width = "20%";
        quantityCell.style.textAlign = "center"
        quantityCell.classList.add("order-table-td");
        quantityCellInput.type = "number";
        quantityCellInput.step = "1";
        quantityCellInput.classList.add("input-quantity");
        quantityCellInput.onchange = () => changeQuantity(item, quantityCellInput);
        quantityCell.appendChild(quantityCellInput);

        itemCell.style.width = "40%";
        itemCell.classList.add("order-table-td");

        totalCell.style.width = "20%";
        totalCell.style.textAlign = "center"
        totalCell.classList.add("order-table-td");

        removeCell.style.width = "20%";
        removeCell.classList.add("order-table-td");

        row.appendChild(quantityCell);
        row.appendChild(itemCell);
        row.appendChild(totalCell);
        removeCell.appendChild(removeButton);
        row.appendChild(removeCell);

        orderItemTable.appendChild(row);

        total += parseFloat(itemTotal) * 100;
    });

    document.getElementById("total").textContent = (total / 100).toFixed(2) + " —Ä";
}

function changeQuantity(item,quantityCellInput) {
    // –ü–æ–∏—Å–∫ –ø—Ä–æ–¥—É–∫—Ç–∞ –≤ –º–∞—Å—Å–∏–≤–µ –ø–æ –∏–º–µ–Ω–∏
    if (item) {
        let quantityOP = quantityCellInput.value;
        if (isNaN(quantityOP) || quantityOP < 1) {
            orderItems.splice(orderItems.indexOf(item), 1);
        } else {
            item.quantity = quantityOP;
        }
        displayOrder();
    }
}
//Remove item from page
function removeItem(index) {
    orderItems.splice(index, 1);
    displayOrder();
}

//Clear order on page
function clearOrder() {
    orderItems = [];
    cashPaid = 0;
    cashLessPaid = 0;
    establishmentPaid=0;
    displayMainContainer();
}


function addUserToShift() {
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–µ—Ä–≤–µ—Ä
    let xhr = new XMLHttpRequest();
    xhr.open('POST', '/addUserToShift', true);
    xhr.setRequestHeader('Content-Type', 'application/json');

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –∑–∞–ø—Ä–æ—Å–∞
    xhr.onreadystatechange = function () {
        if (xhr.readyState === 4) {
            if (xhr.status === 200) {
                showMessage('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–±–∞–≤–ª–µ–Ω!!!', 'green');
            } else {
                showMessage(xhr.responseText);
            }
        }
    };

    // –ü–æ–ª—É—á–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ login
    let login = document.getElementById('login');

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å —Å –¥–∞–Ω–Ω—ã–º–∏ –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON
    xhr.send(login.value);

    // –û—á–∏—â–∞–µ–º –ø–æ–ª–µ –≤–≤–æ–¥–∞ login
    document.getElementById('login').value = '';
}

//Send order to server
function submitOrder(button) {
    // –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –∑–∞–∫–∞–∑–∞
    let orders = ({
        establishmentPaid:establishmentPaid,
        cashPaid:(cashPaid-sumOfChange),
        cashLessPaid:cashLessPaid,
        sumOfChange:sumOfChange,
        numberOfTable:numberOfTable,
        orderItems, // –ú–∞—Å—Å–∏–≤ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Ç–æ–≤–∞—Ä–∞—Ö –≤ –∑–∞–∫–∞–∑–µ
    });
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–∫–∞–∑ –Ω–∞ —Å–µ—Ä–≤–µ—Ä
    let xhr = new XMLHttpRequest();
    xhr.open('POST', '/submitOrder', true);
    xhr.setRequestHeader('Content-Type', 'application/json');
    xhr.onreadystatechange = function() {
        if (xhr.readyState === 4 && xhr.status === 200){
            showMessage(xhr.responseText,'green');
            clearOrder();
        }else{
            showMessage(xhr.responseText);
            setTimeout(function() {
                button.disabled = false;
            }, 1000);
        }
    };
    xhr.send(JSON.stringify(orders));
}


//Check state of shift and set corresponding button
function checkShiftButtonState() {
    let xhr = new XMLHttpRequest();
    xhr.open('GET', '/getOpenShift', true);
    // xhr.setRequestHeader(csrfHeader, csrfToken);

    xhr.onreadystatechange = function() {
        if (xhr.readyState === 4) {
            if (xhr.status === 200) {
                // –û–±—Ä–∞–±–æ—Ç–∫–∞ —É—Å–ø–µ—à–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞
                try {
                    let shift = xhr.responseText ? JSON.parse(xhr.responseText) : null;
                    let shiftButton = document.getElementById("shiftButton");
                    if (shift) {
                        shiftButton.textContent = '–ó–∞–∫—Ä—ã—Ç—å —Å–º–µ–Ω—É';
                        shiftButton.onclick = function() {
                            shiftButton.disabled = true;
                            closeShift(shiftButton);
                        };
                    } else {
                        shiftButton.textContent = '–û—Ç–∫—Ä—ã—Ç—å —Å–º–µ–Ω—É';
                        shiftButton.onclick = function() {
                            shiftButton.disabled = true;
                            openShift(shiftButton);
                        };
                    }
                } catch (error) {
                    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–∑–±–æ—Ä–µ –æ—Ç–≤–µ—Ç–∞: ', error);
                }
            } else {
                // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
                console.error('–û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: ', xhr.status);
            }
        }
    };

// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å
    xhr.send();

}

//Show message in messages div
function showMessage(message='–û—Ç–∫—Ä–æ–π—Ç–µ —Å–º–µ–Ω—É!!!',color='red'){
    let messageElement = document.getElementById('messages');
    messageElement.style.fontSize = "26px";
    messageElement.style.color = color;
    messageElement.textContent = message;
    let displayTime = 5000; // –Ω–∞–ø—Ä–∏–º–µ—Ä, 5000 –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥ (5 —Å–µ–∫—É–Ω–¥)
    setTimeout(function() {
        messageElement.textContent = ''; // –û—á–∏—â–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —ç–ª–µ–º–µ–Ω—Ç–∞
    }, displayTime);
}

//Send GET request to open shift and changing shift button state
function openShift(button) {
    let xhr = new XMLHttpRequest();
    xhr.open('GET', '/openShift', true);
    xhr.onreadystatechange = function() {
        if (xhr.readyState === 4 && xhr.status === 200) {
            // –û–±—Ä–∞–±–æ—Ç–∫–∞ —É—Å–ø–µ—à–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞
            shift = JSON.parse(xhr.responseText);
            // –ü–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Ç–≤–µ—Ç–∞, –ø—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ª–æ–≤–∏–µ
            button.textContent = '–ó–∞–∫—Ä—ã—Ç—å —Å–º–µ–Ω—É';
            setTimeout(function() {
                button.disabled = false;
            }, 5000);
            button.onclick = function() {
                button.disabled = true;
                closeShift(button);
                };
            }
        };
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å
    xhr.send();
}

//Send GET request to close shift and changing shift button state
function closeShift(button) {
    let xhr = new XMLHttpRequest();
    xhr.open('GET', '/closeShift', true);
    xhr.onreadystatechange =  function() {
        // –∏ —Å—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞ —Å–µ—Ä–≤–µ—Ä–∞ 200 (OK)
        if (xhr.readyState === 4 && xhr.status === 200)
            // –û–±—Ä–∞–±–æ—Ç–∫–∞ —É—Å–ø–µ—à–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞
            console.log(xhr.responseText);
        button.textContent = '–û—Ç–∫—Ä—ã—Ç—å —Å–º–µ–Ω—É';
        setTimeout(function() {
            button.disabled = false;
        }, 5000);
        button.onclick = function() {
            button.disabled = true;
            openShift(button);
        };

    };
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å
    xhr.send();
}

//Sending GET request to X-Report
function xReportSend(button){
    let xhr = new XMLHttpRequest();
    xhr.open('GET', '/getXReport', true);
    xhr.onreadystatechange = function () {
        // –∏ —Å—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞ —Å–µ—Ä–≤–µ—Ä–∞ 200 (OK)
        if (xhr.readyState === 4 && xhr.status === 200){
            console.log(xhr.responseText);
            showMessage(xhr.responseText,'green');
        }else{
            console.log(xhr.responseText);
            showMessage(xhr.responseText);
        }
        setTimeout(function() {
            button.disabled = false;
        }, 5000);
    };
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å
    xhr.send();
}

//Sending GET request that returns all Categories
function getCategoriesToPage() {
    let xhr = new XMLHttpRequest();
    xhr.open('GET', '/getCategory', true);
    // xhr.setRequestHeader(csrfHeader, csrfToken); // –ü–µ—Ä–µ–¥–∞—á–∞ CSRF-—Ç–æ–∫–µ–Ω–∞ –≤ –∑–∞–≥–æ–ª–æ–≤–∫–µ
    xhr.onreadystatechange = function() {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∑–∞–ø—Ä–æ—Å –∑–∞–≤–µ—Ä—à–µ–Ω (readyState = 4)
        // –∏ —Å—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞ —Å–µ—Ä–≤–µ—Ä–∞ 200 (OK)
        if (xhr.readyState === 4 && xhr.status === 200) {
            // –û–±—Ä–∞–±–æ—Ç–∫–∞ —É—Å–ø–µ—à–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞
            categoryData = JSON.parse(xhr.responseText);
            displayMainContainer()
        }
    };
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å
    xhr.send();
}

//Sending GET request that returns all Items
function getItemsToPage() {
    let xhr = new XMLHttpRequest();
    xhr.open('GET', '/getItemsToPage', true);
    // xhr.setRequestHeader(csrfHeader, csrfToken); // –ü–µ—Ä–µ–¥–∞—á–∞ CSRF-—Ç–æ–∫–µ–Ω–∞ –≤ –∑–∞–≥–æ–ª–æ–≤–∫–µ
    xhr.onreadystatechange = function() {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∑–∞–ø—Ä–æ—Å –∑–∞–≤–µ—Ä—à–µ–Ω (readyState = 4)
        // –∏ —Å—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞ —Å–µ—Ä–≤–µ—Ä–∞ 200 (OK)
        if (xhr.readyState === 4 && xhr.status === 200) {
            // –û–±—Ä–∞–±–æ—Ç–∫–∞ —É—Å–ø–µ—à–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞
            itemsToPage = JSON.parse(xhr.responseText);
        }
    };
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å
    xhr.send();
}
